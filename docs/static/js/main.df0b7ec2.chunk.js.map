{"version":3,"sources":["Header.js","Gif.js","Pagination.js","Search.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","style","fontFamily","href","target","Gif","txt","el","document","createElement","value","body","appendChild","select","execCommand","removeChild","src","this","props","url","alt","title","autoPlay","loop","gif","onClick","copyText","bind","aria-hidden","embed_url","images","looping","mp4","React","Component","Pagination","state","pageNumber","renderButtons","buttons","i","pagination","total_count","count","push","key","changeNumber","length","slice","number","setState","changePage","less","more","prevProps","prevState","offset","axios","require","Search","apiKey","GIFs","searchQuery","page","handleSearchQueryChange","e","search","getGIFs","get","getUrl","then","response","data","catch","error","finally","handleKeyPress","event","map","id","onKeyPress","placeholder","onChange","renderPictures","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.df0b7ec2.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header(){\n\n    let githubLink = 'https://github.com/yousef-aldawoud/'\n\n    return (\n        <div>\n            <header className=\"fixed bg-gray-800 text-white w-full mb-5\">\n                <nav className=\"clearfix p-2\">\n                    <div className=\"float-left\"><h1 style={{fontFamily:'Roboto Mono'}}>Giphy search</h1></div>\n                    <div className=\"float-right h-full\">\n                        <a href={githubLink} target='_blank' className=\"h-full no-underline p-2 m-2 text-xl text-white hover:bg-gray-700\">Github</a>\n                    </div>\n                </nav>\n            </header>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n        </div>\n      );\n}\n\nexport default Header;","import React from 'react';\n\nclass Gif extends React.Component {\n\n    copyText(txt){\n        const el = document.createElement('textarea');\n        el.value = txt\n        document.body.appendChild(el);\n        el.select();\n        document.execCommand('copy');\n        document.body.removeChild(el);\n    }\n\n    render(){\n        return(\n            <div className='w-full sm:w-1/2 md:w-1/3 lg:w-1/4'>\n                <div className=\"m-1  rounded overflow-hidden shadow-lg\">\n                    <video className=\"w-full\" src={this.props.url} alt={this.props.title} autoPlay loop></video>\n                    <div className=\"px-6 py-4\">\n                        <div className=\"font-bold text-xl mb-2\">{this.props.title}</div>\n                        <div className=\"flex\">\n                            <a href={this.props.gif.url} className=\"text-center w-3/4 bg-black text-white p-2 no-underline\">Giphy link</a> \n                            <button onClick={this.copyText.bind(this,this.props.gif.url)} className=\"fa bg-blue-700 text-white text-center fa-files-o fa-1 p-2 w-1/4 text-2xl border-0 cursor-pointer\" aria-hidden=\"true\"></button>\n                        </div>\n                        <div className=\"flex mt-2\">\n                            <a href={this.props.gif.embed_url} className=\"text-center w-3/4 bg-black text-white p-2 no-underline\">Embed link</a> \n                            <button onClick={this.copyText.bind(this,this.props.gif.embed_url)} className=\"fa bg-green-700 text-white text-center fa-files-o fa-1 p-2 w-1/4 text-2xl border-0 cursor-pointer\" aria-hidden=\"true\"></button>\n                        </div>\n                        <div className=\"flex mt-2\">\n                            <a href={this.props.gif.images.looping.mp4} className=\"text-center w-3/4 bg-black text-white p-2 no-underline\">Gif mp4 link</a> \n                            <button onClick={this.copyText.bind(this,this.props.gif.images.looping.mp4)} className=\"fa bg-red-700 text-white text-center fa-files-o fa-1 p-2 w-1/4 text-2xl border-0 cursor-pointer\" aria-hidden=\"true\"></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\n\n\nexport default Gif;","import React from 'react';\n\nclass Pagination extends React.Component{\n\n    state = {\n        pageNumber:0,\n    }\n\n    renderButtons = ()=>{\n        let buttons = []\n        for (let i = 0 ; i<this.props.pagination.total_count/this.props.pagination.count ; i++){\n            if(this.state.pageNumber === i){\n                buttons.push(<button className='active' key={i} onClick={this.changeNumber.bind(this,i)}>{i+1}</button>);\n                continue;\n            }\n            buttons.push(<button key={i} onClick={this.changeNumber.bind(this,i)}>{i+1}</button>);\n        }\n        if(buttons.length>20){\n            return buttons.slice(this.state.pageNumber,this.state.pageNumber+5)\n        }\n        return buttons;\n    }\n\n    changeNumber = (number)=>{\n        this.setState({pageNumber:number})\n        this.props.changePage(number);\n    }\n\n    less = ()=>{\n        if(this.state.pageNumber>0){\n            this.changeNumber(this.state.pageNumber-1)\n        }\n    }\n    \n    more = ()=>{\n        if(this.state.pageNumber<this.props.pagination.total_count/this.props.pagination.count){\n            this.changeNumber(this.state.pageNumber+1)\n        }\n    }\n\n    componentDidUpdate(prevProps,prevState) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.pagination.offset===0 && prevProps.pagination.offset !== this.props.pagination.offset) {\n            this.setState({pageNumber:0})\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"pagination\">\n                <button onClick={this.less}>&laquo;</button>\n                {this.renderButtons()}\n                <button onClick={this.more}>&raquo;</button>\n            </div>\n        )\n    }\n}\n\nexport default Pagination;","import React from 'react';\nimport Gif from './Gif';\nimport Pagination from './Pagination';\nconst axios = require('axios');\n\nclass Search extends React.Component {\n\n    apiKey = '9WF7bQtNh9jRmCHjDQ0QyT5ksp1oU2KC';\n\n    state = {\n        pagination:{\n            offset:0,\n            total_count:0,\n            count:20\n        },\n        GIFs:[],\n        searchQuery:'great',\n        page:0,\n    }\n\n    handleSearchQueryChange = (e)=>{\n        this.setState({searchQuery:e.target.value})\n    }\n\n    getUrl(){\n        let url='https://api.giphy.com/v1/gifs/search?api_key='+this.apiKey+'&q='+this.state.searchQuery+\n        '&limit='+this.state.pagination.count+'&offset='+this.state.pagination.offset+'&rating=g&lang=en';\n        return url;\n    }\n    \n    changePage = (page)=>{\n        let pagination = {...this.state.pagination,offset:page*this.state.pagination.count}\n        this.setState({pagination:pagination});\n    }\n    \n    componentDidUpdate(prevProps,prevState) {\n        // Typical usage (don't forget to compare props):\n        if (this.state.pagination.offset !== prevState.pagination.offset) {\n          this.getGIFs()\n        }\n    }\n\n    search= ()=>{\n        let pagination = {...this.state.pagination,offset:0}\n        this.setState({pagination:pagination});\n        this.getGIFs()\n    }\n\n    getGIFs = ()=>{\n\n        axios.get(this.getUrl()).then((response)=>{\n            this.setState({GIFs:response.data.data});\n            this.setState({pagination:response.data.pagination})\n        }).catch(function (error) {\n            // handle error\n        })\n        .finally(function () {\n            // always executed\n        });\n    }\n\n    renderPictures(){\n        return this.state.GIFs.map((gif)=>{\n         return  <Gif gif={gif} url={gif.images.looping.mp4} title={gif.title} key={gif.id} />\n        })\n    }\n\n    handleKeyPress = (event) => {\n        if(event.key === 'Enter'){\n          this.search()\n        }\n    }\n\n    componentDidMount(){\n        \n    }\n\n    render(){\n      return (\n        <div>\n            <div className=\"w-full flex\">\n                <input onKeyPress={this.handleKeyPress} className='w-3/4 border-1 bg-white p-3' placeholder=\"Search for gifs\" value={this.searchQuery} onChange={this.handleSearchQueryChange}/>\n                <button className='w-1/4 border-0 bg-black p-3 text-white'  onClick={this.search}>Search</button>\n            </div>\n            <br/>\n            <div >{this.state.pagination.total_count>this.state.pagination.count? this.state.pagination.count : this.state.pagination.total_count} out of {this.state.pagination.total_count} search results</div>\n            <br/>\n            <div className=\"flex flex-wrap\">\n                {this.renderPictures()}\n            </div>\n            <Pagination pagination={this.state.pagination} changePage={this.changePage} />\n        </div>\n      );\n    }\n  }\n  \nexport default Search;","import React from 'react';\nimport Header from './Header'; \nimport Search from './Search';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <div className=\"x-container\">\n        <Search/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}